# -*- coding: utf-8 -*-
"""make_jobs.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1aLnY5WSphcpu2Qr1vWV7r54RSxMX6o5c
"""

import numpy as np
import os 



def create_jobs(Q:int = 3
                ,NTEMPS:int = 200
                ,NSAMPLES:int = 50
                ,BATCH_SIZE:int =20
                ,ROOT:str = ''):


    NJOBS = int(NTEMPS/BATCH_SIZE)
    dec = 4


    if not os.path.exists(os.path.join(ROOT, f'Q{Q}')):
        os.mkdir(os.path.join(ROOT, f'Q{Q}'))
        
    ROOT = os.path.join(ROOT, f'Q{Q}')
    TC = (1/(np.log(1+np.sqrt(Q))))
    TC

    preamble = '#!/bin/bash \n#SBATCH -n 1 \n#SBATCH -N 1 \n#SBATCH -t 10-00:00 \n#SBATCH -p long \n#SBATCH --qos qos_long # QOS\n\n# Comandos de execução do seu programa:'


    jobs_hash = f'Q{Q}_{NTEMPS}T_{NSAMPLES}s'

    # gerando temps
    nmin = 0.02
    nmax = 2*TC
    temps = np.linspace(nmin, TC, int(NTEMPS/2))
    temps_aux = np.linspace(TC, nmax, int(NTEMPS/2))

    temps = np.concatenate((temps, temps_aux))

    

    #temps = [[0 for x in range(w)] for y in range(h)] 

    # for i in range(w):
    #     for j in range(h):
    #         temps[i][j] = round(k*step+nmin, dec)
    #         k+=1

    line = []

    for i in range(NJOBS):
        line.append('for TEMP in ')

    for i in range(0, NJOBS):
        temps_ = temps[i*BATCH_SIZE:i*BATCH_SIZE+BATCH_SIZE]
        for t in temps_:
            line[i] += str(round(t, dec)) + ' '
        # for t in temps_:
        #     line[i]
            # line[i] += str(
            # line[i] += ' '

    final = 'do \n\tfor i in {1..'
    final = final + str(NSAMPLES) +'} \n\tdo\n\t\t./a.out -Q '
    final = final + str(Q)
    final = final + ' -T $TEMP\n\tdone\ndone'

    space = '\n'
    jobs = []

    for i in range(NJOBS):
        jobs.append(preamble+space+line[i]+space+final)

    filenames = ['j{:02d}_'.format(i+1) +jobs_hash+'.sh'   for i in range(NJOBS)]



    for i in range(NJOBS):
        #open text file
        filename_path = os.path.join(ROOT, filenames[i])
        text_file = open(filename_path, "w")
    
        #write string to file
        text_file.write(jobs[i])
    
        #close file
        text_file.close()



    sbatchs = preamble 
    sbatchs = sbatchs + space

    for i in range(10):
        sbatchs = sbatchs + 'sbatch ' + filenames[i] + space


    #open text file
    sbatchs_name = 'sbatchs_' +  jobs_hash + '.sh'
    sbatchs_path = os.path.join(ROOT, sbatchs_name)

    text_file = open(sbatchs_path, "w")
    
    #write string to file
    text_file.write(sbatchs)
    
    #close file
    text_file.close()

    return


if __name__ == '__main__':
    path = r'TCC\Testes\testes20221010\jobs'

    for q in [2,3,4,6,7,8]:
        create_jobs(ROOT=path, Q=q, NSAMPLES=200)